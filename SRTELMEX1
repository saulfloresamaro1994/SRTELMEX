<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emby Content</title>
    <link rel="stylesheet" href="https://cdn.plyr.io/3.7.8/plyr.css" />
    <style>
        /* Estilos existentes (no modificados) */
        body {
            font-family: Arial, sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
            position: relative;
            overflow: auto;
            background: black;
        }

        .container {
            width: 90%;
            margin: 0 auto;
            text-align: center;
            position: relative;
            z-index: 2;
            background: rgba(0, 0, 0, 0.6);
            padding: 20px;
            border-radius: 10px;
        }

        .buttons button {
            margin: 10px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }

        #content {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 10px;
        }

        .movie, .series {
            flex: 1 1 calc(20% - 10px);
            text-align: center;
            box-sizing: border-box;
            color: white;
        }

        .movie img, .series img {
            width: 100%;
            height: auto;
            max-width: 150px;
            max-height: 225px;
            cursor: pointer;
        }

        /* Estilos del reproductor modificados */
        #player {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        #playerContainer {
            position: relative;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 10px;
            padding: 20px;
            max-width: 800px;
            width: 90%;
            text-align: center;
        }

        /* Estilos para Plyr */
        #videoPlayer {
            width: 100%;
            max-height: 400px;
            background: #000;
            border-radius: 10px;
        }

        .plyr {
            border-radius: 10px;
        }

        /* Botón de cerrar */
        #closePlayer {
            position: absolute;
            background: #ff0000;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            top: 10px;
            right: 10px;
        }

        /* Estilos responsivos para el reproductor */
        @media (max-width: 768px) {
            #videoPlayer {
                max-height: 50%;
            }

            .movie, .series {
                flex: 1 1 calc(33.33% - 10px);
            }
        }

        /* Fondo dinámico */
        #background {
            position: fixed;
            top: 0;
            left: 0;
            width: 90%;
            height: 100%;
            margin: 0 auto;
            z-index: 0;
            background-size: cover;
            background-position: center;
            opacity: 0.8;
            transition: background-image 1s ease-in-out;
            border-radius: 10px;
        }
    </style>
</head>
<body>
    <!-- Fondo dinámico -->
    <div id="background"></div>

    <div class="container">
        <h1>Mi Biblioteca Emby</h1>
        <div class="buttons">
            <button id="moviesBtn">Películas</button>
            <button id="seriesBtn">Series</button>
        </div>
        <div id="content"></div>
    </div>

    <!-- Reproductor Plyr -->
    <div id="player">
        <div id="playerContainer">
            <video id="videoPlayer" controls>
                <!-- Aquí se agregará la fuente del video dinámicamente -->
            </video>
            <button id="closePlayer" onclick="closePlayer()">Cerrar</button>
        </div>
    </div>

    <script src="https://cdn.plyr.io/3.7.8/plyr.js"></script>
    <script>
        const apiKey = 'efc8a8df6e1c4a50992af3bf3dd71903';
        const localServerUrl = 'http://192.168.1.69:8096';
        const remoteServerUrl = 'http://mxcuentas.ddns.net:8096';
        let serverUrl = localServerUrl;

        // Lista de carátulas para el fondo dinámico
        let backgroundImages = [];
        let currentBackgroundIndex = 0;

        // Instancia de Plyr
        let player;

        // Función para probar la conexión a la URL local
        async function testLocalConnection() {
            try {
                const response = await fetch(`${localServerUrl}/System/Info/Public?api_key=${apiKey}`);
                if (response.ok) {
                    serverUrl = localServerUrl;
                } else {
                    serverUrl = remoteServerUrl;
                }
            } catch (error) {
                serverUrl = remoteServerUrl;
            }
        }

        // Llamar a la función de prueba de conexión al cargar la página
        document.addEventListener('DOMContentLoaded', async () => {
            await testLocalConnection();
            loadMovies(); // Cargar películas automáticamente al inicio
            startBackgroundSlideShow(); // Iniciar el fondo dinámico
        });

        document.getElementById('moviesBtn').addEventListener('click', () => {
            loadMovies();
        });

        document.getElementById('seriesBtn').addEventListener('click', () => {
            loadSeries();
        });

        async function loadMovies() {
            const response = await fetch(`${serverUrl}/Items?Recursive=true&IncludeItemTypes=Movie&SortBy=ProductionYear&SortOrder=Descending&api_key=${apiKey}`);
            const data = await response.json();
            displayItems(data.Items, 'movie');
        }

        async function loadSeries() {
            const response = await fetch(`${serverUrl}/Items?Recursive=true&IncludeItemTypes=Series&SortBy=ProductionYear&SortOrder=Descending&api_key=${apiKey}`);
            const data = await response.json();
            displayItems(data.Items, 'series');
        }

        function displayItems(items, type) {
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            // Guardar las carátulas para el fondo dinámico
            backgroundImages = items.map(item => `${serverUrl}/Items/${item.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}`);

            items.forEach(item => {
                const itemDiv = document.createElement('div');
                itemDiv.className = type;
                itemDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${item.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${item.Name}">
                    <p>${item.Name}</p>
                `;

                if (type === 'movie') {
                    itemDiv.querySelector('img').addEventListener('click', () => playItem(item.Id, itemDiv.querySelector('img').src));
                } else if (type === 'series') {
                    itemDiv.querySelector('img').addEventListener('click', () => showSeasons(item.Id, itemDiv.querySelector('img').src));
                }

                contentDiv.appendChild(itemDiv);
            });

            // Iniciar el fondo dinámico
            startBackgroundSlideShow();
        }

        async function showSeasons(seriesId, imageUrl) {
            const response = await fetch(`${serverUrl}/Shows/${seriesId}/Seasons?api_key=${apiKey}`);
            const seasons = await response.json();
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            seasons.Items.forEach(season => {
                const seasonDiv = document.createElement('div');
                seasonDiv.className = 'season';
                seasonDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${season.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${season.Name}">
                    <p>${season.Name}</p>
                `;

                seasonDiv.querySelector('img').addEventListener('click', () => showEpisodes(seriesId, season.Id, seasonDiv.querySelector('img').src));
                contentDiv.appendChild(seasonDiv);
            });

            const backButton = document.createElement('button');
            backButton.innerText = 'Regresar a Series';
            backButton.addEventListener('click', () => loadSeries());
            contentDiv.appendChild(backButton);

            // Cambiar el fondo a la carátula de la serie seleccionada
            changeBackground(imageUrl);
        }

        async function showEpisodes(seriesId, seasonId, imageUrl) {
            const response = await fetch(`${serverUrl}/Shows/${seriesId}/Episodes?SeasonId=${seasonId}&api_key=${apiKey}`);
            const episodes = await response.json();
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            episodes.Items.forEach(episode => {
                const episodeDiv = document.createElement('div');
                episodeDiv.className = 'episode';
                episodeDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${episode.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${episode.Name}">
                    <p>${episode.Name}</p>
                `;

                episodeDiv.querySelector('img').addEventListener('click', () => playItem(episode.Id, episodeDiv.querySelector('img').src));
                contentDiv.appendChild(episodeDiv);
            });

            const backButton = document.createElement('button');
            backButton.innerText = 'Regresar a Temporadas';
            backButton.addEventListener('click', () => showSeasons(seriesId, imageUrl));
            contentDiv.appendChild(backButton);

            // Cambiar el fondo a la carátula del episodio seleccionado
            changeBackground(imageUrl);
        }

        function playItem(itemId, imageUrl) {
            const videoUrl = `${serverUrl}/Items/${itemId}/Download?api_key=${apiKey}`;

            // Inicializar Plyr si no está inicializado
            if (!player) {
                player = new Plyr('#videoPlayer', {
                    controls: ['play', 'progress', 'current-time', 'mute', 'volume', 'fullscreen'],
                    autoplay: true,
                });
            }

            // Cambiar la fuente del video
            const videoElement = document.getElementById('videoPlayer');
            videoElement.src = videoUrl;

            // Mostrar el reproductor
            document.getElementById('player').style.display = 'flex';

            // Cambiar el fondo a la carátula de la película o episodio seleccionado
            changeBackground(imageUrl);
        }

        function closePlayer() {
            if (player) {
                player.pause();
                player.source = null; // Limpiar la fuente del video
            }
            document.getElementById('player').style.display = 'none';

            // Restaurar el fondo dinámico
            startBackgroundSlideShow();
        }

        // Función para cambiar el fondo
        function changeBackground(imageUrl) {
            const background = document.getElementById('background');
            background.style.backgroundImage = `url('${imageUrl}')`;
        }

        // Función para iniciar el fondo dinámico
        function startBackgroundSlideShow() {
            const background = document.getElementById('background');
            if (backgroundImages.length > 0) {
                setInterval(() => {
                    const randomIndex = Math.floor(Math.random() * backgroundImages.length);
                    background.style.backgroundImage = `url('${backgroundImages[randomIndex]}')`;
                }, 15000);
            }
        }
    </script>
</body>
</html> Content</title>
    <style>
        /* Estilos existentes (no modificados) */
        body {
            font-family: Arial, sans-serif;
            color: #333;
            margin: 0;
            padding: 0;
            position: relative;
            overflow: auto; /* Permitir desplazamiento */
            background: black; /* Fondo negro */
        }

        .container {
            width: 90%;
            margin: 0 auto;
            text-align: center;
            position: relative;
            z-index: 2;
            background: rgba(0, 0, 0, 0.6); /* Contenedor más oscuro */
            padding: 20px;
            border-radius: 10px;
        }

        .buttons button {
            margin: 10px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }

        #content {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between; /* Justificar sin espacios */
            gap: 10px; /* Espacio entre elementos */
        }

        .movie, .series {
            flex: 1 1 calc(20% - 10px); /* Ajustar el tamaño de los elementos */
            text-align: center;
            box-sizing: border-box;
            color: white; /* Texto en color blanco */
        }

        .movie img, .series img {
            width: 100%;
            height: auto;
            max-width: 150px;
            max-height: 225px;
            cursor: pointer;
        }

        /* Estilos del reproductor modificados */
        #player {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        #playerContainer {
            position: relative;
            background: rgba(0, 0, 0, 0.8);
            border-radius: 10px;
            padding: 20px;
            max-width: 800px;
            width: 90%;
            text-align: center;
        }

        #videoPlayer {
            width: 100%;
            max-height: 400px;
            background: #000;
            border-radius: 10px;
        }

        /* Botón de cerrar */
        #closePlayer {
            position: absolute;
            background: #ff0000;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            top: 10px;
            right: 10px;
        }

        /* Estilos responsivos para el reproductor */
        @media (max-width: 768px) {
            #videoPlayer {
                max-height: 50%;
            }

            .movie, .series {
                flex: 1 1 calc(33.33% - 10px); /* Ajustar para dispositivos móviles */
            }
        }

        /* Fondo dinámico */
        #background {
            position: fixed;
            top: 0;
            left: 0;
            width: 90%; /* Mismo ancho que el contenedor */
            height: 100%;
            margin: 0 auto; /* Centrar horizontalmente */
            z-index: 0; /* Detrás del contenido */
            background-size: cover;
            background-position: center;
            opacity: 0.8; /* Mayor intensidad (80% de opacidad) */
            transition: background-image 1s ease-in-out;
            border-radius: 10px; /* Mismo borde redondeado que el contenedor */
        }
    </style>
</head>
<body>
    <!-- Fondo dinámico -->
    <div id="background"></div>

    <div class="container">
        <h1>Mi Biblioteca Emby</h1>
        <div class="buttons">
            <button id="moviesBtn">Películas</button>
            <button id="seriesBtn">Series</button>
        </div>
        <div id="content"></div>
    </div>

    <!-- Reproductor Universal -->
    <div id="player">
        <div id="playerContainer">
            <video id="videoPlayer" controls>
                <!-- Aquí se agregará la fuente del video dinámicamente -->
            </video>
            <button id="closePlayer" onclick="closePlayer()">Cerrar</button>
        </div>
    </div>

    <script>
        const apiKey = 'efc8a8df6e1c4a50992af3bf3dd71903';
        const localServerUrl = 'http://192.168.1.69:8096';
        const remoteServerUrl = 'http://mxcuentas.ddns.net:8096';
        let serverUrl = localServerUrl;

        // Lista de carátulas para el fondo dinámico
        let backgroundImages = [];
        let currentBackgroundIndex = 0;

        // Función para probar la conexión a la URL local
        async function testLocalConnection() {
            try {
                const response = await fetch(`${localServerUrl}/System/Info/Public?api_key=${apiKey}`);
                if (response.ok) {
                    serverUrl = localServerUrl;
                } else {
                    serverUrl = remoteServerUrl;
                }
            } catch (error) {
                serverUrl = remoteServerUrl;
            }
        }

        // Llamar a la función de prueba de conexión al cargar la página
        document.addEventListener('DOMContentLoaded', async () => {
            await testLocalConnection();
            loadMovies(); // Cargar películas automáticamente al inicio
            startBackgroundSlideShow(); // Iniciar el fondo dinámico
        });

        document.getElementById('moviesBtn').addEventListener('click', () => {
            loadMovies();
        });

        document.getElementById('seriesBtn').addEventListener('click', () => {
            loadSeries();
        });

        async function loadMovies() {
            const response = await fetch(`${serverUrl}/Items?Recursive=true&IncludeItemTypes=Movie&SortBy=ProductionYear&SortOrder=Descending&api_key=${apiKey}`);
            const data = await response.json();
            displayItems(data.Items, 'movie');
        }

        async function loadSeries() {
            const response = await fetch(`${serverUrl}/Items?Recursive=true&IncludeItemTypes=Series&SortBy=ProductionYear&SortOrder=Descending&api_key=${apiKey}`);
            const data = await response.json();
            displayItems(data.Items, 'series');
        }

        function displayItems(items, type) {
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            // Guardar las carátulas para el fondo dinámico
            backgroundImages = items.map(item => `${serverUrl}/Items/${item.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}`);

            items.forEach(item => {
                const itemDiv = document.createElement('div');
                itemDiv.className = type;
                itemDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${item.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${item.Name}">
                    <p>${item.Name}</p>
                `;

                if (type === 'movie') {
                    itemDiv.querySelector('img').addEventListener('click', () => playItem(item.Id, itemDiv.querySelector('img').src));
                } else if (type === 'series') {
                    itemDiv.querySelector('img').addEventListener('click', () => showSeasons(item.Id, itemDiv.querySelector('img').src));
                }

                contentDiv.appendChild(itemDiv);
            });

            // Iniciar el fondo dinámico
            startBackgroundSlideShow();
        }

        async function showSeasons(seriesId, imageUrl) {
            const response = await fetch(`${serverUrl}/Shows/${seriesId}/Seasons?api_key=${apiKey}`);
            const seasons = await response.json();
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            seasons.Items.forEach(season => {
                const seasonDiv = document.createElement('div');
                seasonDiv.className = 'season';
                seasonDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${season.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${season.Name}">
                    <p>${season.Name}</p>
                `;

                seasonDiv.querySelector('img').addEventListener('click', () => showEpisodes(seriesId, season.Id, seasonDiv.querySelector('img').src));
                contentDiv.appendChild(seasonDiv);
            });

            const backButton = document.createElement('button');
            backButton.innerText = 'Regresar a Series';
            backButton.addEventListener('click', () => loadSeries());
            contentDiv.appendChild(backButton);

            // Cambiar el fondo a la carátula de la serie seleccionada
            changeBackground(imageUrl);
        }

        async function showEpisodes(seriesId, seasonId, imageUrl) {
            const response = await fetch(`${serverUrl}/Shows/${seriesId}/Episodes?SeasonId=${seasonId}&api_key=${apiKey}`);
            const episodes = await response.json();
            const contentDiv = document.getElementById('content');
            contentDiv.innerHTML = '';

            episodes.Items.forEach(episode => {
                const episodeDiv = document.createElement('div');
                episodeDiv.className = 'episode';
                episodeDiv.innerHTML = `
                    <img src="${serverUrl}/Items/${episode.Id}/Images/Primary?maxHeight=300&maxWidth=200&quality=90&api_key=${apiKey}" alt="${episode.Name}">
                    <p>${episode.Name}</p>
                `;

                episodeDiv.querySelector('img').addEventListener('click', () => playItem(episode.Id, episodeDiv.querySelector('img').src));
                contentDiv.appendChild(episodeDiv);
            });

            const backButton = document.createElement('button');
            backButton.innerText = 'Regresar a Temporadas';
            backButton.addEventListener('click', () => showSeasons(seriesId, imageUrl));
            contentDiv.appendChild(backButton);

            // Cambiar el fondo a la carátula del episodio seleccionado
            changeBackground(imageUrl);
        }

        function playItem(itemId, imageUrl) {
            const player = document.getElementById('videoPlayer');
            const videoUrl = `${serverUrl}/Items/${itemId}/Download?api_key=${apiKey}`;

            // Limpiar el reproductor antes de agregar una nueva fuente
            player.innerHTML = '';

            // Agregar la fuente del video
            const source = document.createElement('source');
            source.src = videoUrl;
            player.appendChild(source);

            // Cargar y reproducir el video
            player.load();
            player.play();

            // Mostrar el reproductor
            document.getElementById('player').style.display = 'flex';

            // Cambiar el fondo a la carátula de la película o episodio seleccionado
            changeBackground(imageUrl);
        }

        function closePlayer() {
            const player = document.getElementById('videoPlayer');
            player.pause();
            player.innerHTML = ''; // Limpiar el reproductor
            document.getElementById('player').style.display = 'none';

            // Restaurar el fondo dinámico
            startBackgroundSlideShow();
        }

        // Función para cambiar el fondo
        function changeBackground(imageUrl) {
            const background = document.getElementById('background');
            background.style.backgroundImage = `url('${imageUrl}')`;
        }

        // Función para iniciar el fondo dinámico
        function startBackgroundSlideShow() {
            const background = document.getElementById('background');
            if (backgroundImages.length > 0) {
                setInterval(() => {
                    // Seleccionar una imagen aleatoria
                    const randomIndex = Math.floor(Math.random() * backgroundImages.length);
                    background.style.backgroundImage = `url('${backgroundImages[randomIndex]}')`;
                }, 15000); // Cambiar cada 15 segundos
            }
        }
    </script>
</body>
</html>
