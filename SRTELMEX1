<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interfaz tipo Netflix con Reproductor</title>
    <style>
        /* Estilos CSS (igual que antes) */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #141414;
            color: white;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 20px;
        }

        nav button {
            background-color: #e50914;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 0 10px;
            cursor: pointer;
            font-size: 16px;
        }

        nav button:hover {
            background-color: #f40612;
        }

        #content {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-top: 20px;
        }

        .content-item {
            width: 200px;
            background-color: #333;
            border-radius: 10px;
            overflow: hidden;
            position: relative;
            text-align: center;
            padding: 10px;
        }

        .content-item img {
            width: 100%;
            height: 250px;
            object-fit: cover;
            border-radius: 10px;
        }

        .content-item h3 {
            margin: 10px 0;
            font-size: 16px;
        }

        .content-item button {
            background-color: #e50914;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px;
        }

        .content-item button:hover {
            background-color: #f40612;
        }

        /* Estilos del reproductor */
        #videoPlayer {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 80%;
            max-width: 800px;
            background-color: #000;
            z-index: 1000;
            display: none;
        }

        #videoPlayer iframe {
            width: 100%;
            height: 400px;
            border: none;
        }

        #closePlayer {
            position: absolute;
            top: 10px;
            right: 10px;
            background-color: #e50914;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            font-size: 14px;
            border-radius: 5px;
        }

        #closePlayer:hover {
            background-color: #f40612;
        }

        /* Fondo oscuro detrás del reproductor */
        #overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            z-index: 999;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Encabezado con botones -->
        <header>
            <h1>SERVIDOR SKINHEAD</h1>
            <nav>
                <button id="moviesBtn">Películas</button>
                <button id="seriesBtn">Series</button>
                <button id="tvBtn">TV</button>
            </nav>
        </header>

        <!-- Contenido dinámico -->
        <main>
            <div id="content">
                <!-- Aquí se cargará el contenido dinámico -->
            </div>
        </main>
    </div>

    <!-- Reproductor de video -->
    <div id="overlay"></div>
    <div id="videoPlayer">
        <iframe id="video" src="" allowfullscreen></iframe>
        <button id="closePlayer">Cerrar</button>
    </div>

    <script>
        // Lógica en JavaScript
        const content = document.getElementById('content');
        const videoPlayer = document.getElementById('videoPlayer');
        const overlay = document.getElementById('overlay');
        const videoElement = document.getElementById('video');
        const closePlayerBtn = document.getElementById('closePlayer');

        // Token de autenticación de TMDb
        const API_TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMjI0MThkZjc2NTE4NmUyMjA4Y2Y0NGJlZjllM2JkMiIsIm5iZiI6MTcxMTEyMzY3OS44NjYsInN1YiI6IjY1ZmRhY2RmMzc4MDYyMDE3YzM4MTY1NSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.AlxLhYCCZdwKxX1G0i2OyAko3hb3WvXQx8SeP8Yki-A';
        const API_URL = 'https://api.themoviedb.org/3';

        // Datos simulados (títulos de películas para buscar en TMDb)
        const data = {
            movies: [
                { title: 'The Dark Knight', image: '', link: 'https://drive.google.com/file/d/1a5dRkCP0l7kOuehiX6fwr29_X3PGVkx8/view?usp=drive_link' },
                { title: 'Inception', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0K/preview' },
                { title: 'Interstellar', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0L/preview' }
            ],
            series: [
                { title: 'Breaking Bad', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0M/preview' },
                { title: 'Game of Thrones', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0N/preview' },
                { title: 'Stranger Things', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0O/preview' }
            ],
            tv: [
                { title: 'The Office', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0P/preview' },
                { title: 'Friends', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0Q/preview' },
                { title: 'The Mandalorian', image: '', link: 'https://drive.google.com/file/d/1A2B3C4D5E6F7G8H9I0R/preview' }
            ]
        };

        // Cargar contenido según el tipo
        document.getElementById('moviesBtn').addEventListener('click', () => loadContent('movies'));
        document.getElementById('seriesBtn').addEventListener('click', () => loadContent('series'));
        document.getElementById('tvBtn').addEventListener('click', () => loadContent('tv'));

        // Función para cargar contenido
        async function loadContent(type) {
            content.innerHTML = ''; // Limpiar contenido anterior
            for (const item of data[type]) {
                const itemElement = document.createElement('div');
                itemElement.classList.add('content-item');

                // Buscar información de la película/serie en TMDb
                const tmdbData = await searchTmdb(item.title);
                if (tmdbData) {
                    item.image = `https://image.tmdb.org/t/p/w500${tmdbData.poster_path}`; // URL de la imagen
                    item.title = tmdbData.title || tmdbData.name; // Título de la película/serie
                }

                itemElement.innerHTML = `
                    <img src="${item.image}" alt="${item.title}" onload="scanCover('${item.image}', this)">
                    <h3>${item.title}</h3>
                    <button onclick="playVideo('${item.link}')">Reproducir</button>
                `;
                content.appendChild(itemElement);
            }
        }

        // Buscar en TMDb
        async function searchTmdb(query) {
            try {
                const response = await fetch(`${API_URL}/search/movie?query=${encodeURIComponent(query)}`, {
                    method: 'GET',
                    headers: {
                        'Authorization': `Bearer ${API_TOKEN}`,
                        'Content-Type': 'application/json'
                    }
                });
                const data = await response.json();
                if (data.results && data.results.length > 0) {
                    return data.results[0]; // Devuelve el primer resultado
                }
            } catch (error) {
                console.error('Error al buscar en TMDb:', error);
            }
            return null;
        }

        // Escanear carátula automáticamente
        async function scanCover(imageUrl, imgElement) {
            try {
                const response = await fetch(API_URL, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${API_TOKEN}`
                    },
                    body: JSON.stringify({ image: imageUrl })
                });
                const result = await response.json();
                console.log('Información de la carátula:', result);

                // Actualizar el título con la información de la API (si es necesario)
                if (result.title) {
                    const titleElement = imgElement.nextElementSibling; // El <h3> que sigue a la imagen
                    titleElement.textContent = result.title;
                }
            } catch (error) {
                console.error('Error al escanear la carátula:', error);
            }
        }

        // Reproducir video desde Google Drive
        function playVideo(link) {
            videoElement.src = link;
            videoPlayer.style.display = 'block';
            overlay.style.display = 'block';
        }

        // Cerrar reproductor
        closePlayerBtn.addEventListener('click', () => {
            videoPlayer.style.display = 'none';
            overlay.style.display = 'none';
            videoElement.src = '';
        });

        // Cargar contenido inicial
        loadContent('movies');
    </script>
</body>
</html>
